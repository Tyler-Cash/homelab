authentik:
  envValueFrom:
    AUTHENTIK_POSTGRESQL__PASSWORD:
      secretKeyRef:
        key: password
        name: authentik.home-authentik.credentials.postgresql.acid.zalan.do
    AUTHENTIK_SECRET_KEY:
      secretKeyRef:
        key: secret_key
        name: authentik-secrets
  env:
    AUTHENTIK_COOKIE_DOMAIN: tylercash.dev
    AUTHENTIK_REDIS__HOST: authentik-redis
  authentik:
    postgresql:
      host: home-authentik
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "prod-issuer"
      hajimari.io/enable: "true"
      hajimari.io/group: "Security"
      kubernetes.io/ingress-allow-http: "false" 
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.org/websocket-services: "authentik"
    hosts:
      - host: authentik.k8s.tylercash.dev
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: authentik-letsencrypt-certificate
        hosts:
          - authentik.k8s.tylercash.dev

  postgresql:
    enabled: false

  redis:
    enabled: true
    architecture: replication
    sentinel:
      enabled: true

  prometheus:
    serviceMonitor:
      create: true
    rules:
      create: true