argo-cd:
  redis-ha:
    enabled: true

  controller:
    replicas: 1

  server:
    autoscaling:
      enabled: true
      minReplicas: 2
    extraArgs:
      - --insecure
    ingress:
      enabled: true
      hosts: 
        - argocd.k8s.tylercash.dev
      annotations:
        cert-manager.io/cluster-issuer: "prod-issuer"
        hajimari.io/enable: "true"
        kubernetes.io/ingress-allow-http: "false" 
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
        nginx.ingress.kubernetes.io/proxy-buffers-number: 8
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8"
        nginx.org/websocket-services: "argocd-server"
      tls:
        - hosts:
          - argocd.k8s.tylercash.dev
          secretName: argocd-tylercash-dev-letsencrypt # do not change, this is provided by Argo CD
    config:
      dex.config: |
        connectors:
        - config:
            issuer: https://authentik.k8s.tylercash.dev/application/o/argocd/
            clientID: $argocd-secrets:client_id
            clientSecret: $argocd-secrets:client_secret
            insecureEnableGroups: true
            getUserInfo: true
            scopes:
              - openid
              - profile
              - email
          name: authentik
          type: oidc
          id: authentik
    rbacConfig:
      policy.csv: |
        g, argo-admin, role:admin
  repoServer:
    autoscaling:
      enabled: true
      minReplicas: 2

  applicationSet:
    replicas: 2