argo-cd:
  redis-ha:
    enabled: true

    exporter:
      enabled: true

    topologySpreadConstraints:
      enabled: true
      maxSkew: 1
      topologyKey: topology.kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway

  controller:
    replicas: 2

  server:
    replicas: 2
    ingress:
      enabled: true
      hosts:
        - &host argocd.k8s.tylercash.dev
      annotations:
        cert-manager.io/cluster-issuer: "prod-issuer"
        kubernetes.io/ingress-allow-http: "false"
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
        nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8"
        nginx.org/websocket-services: "argocd-server"
      tls:
        - hosts:
            - *host
          secretName: argocd-tylercash-dev-letsencrypt # do not change, this is provided by Argo CD
    configs:
      cm.url: *host
    config:
      admin.enabled: "false"
      url: https://argocd.k8s.tylercash.dev
      exec.enabled: "true"
      resource.exclusions: |
        - apiGroups:
            - kyverno.io
          kinds:
            - AdmissionReport
            - BackgroundScanReport
            - ClusterAdmissionReport
            - ClusterBackgroundScanReport
          clusters:
            - '*'
      resource.compareoptions: |
        ignoreAggregatedRoles: true
      oidc.config: |
        name: Authentik
        issuer: "https://authentik.k8s.tylercash.dev/application/o/argocd/"
        clientID: $argocd-oidc-secrets:oidc.authentik.client_id
        clientSecret: $argocd-oidc-secrets:oidc.authentik.client_secret
        requestedScopes:
          - openid
          - profile
          - email
          - groups
        oidc.tls.insecure.skip.verify: true
    rbacConfig:
      policy.csv: |
        g, argo-admin, role:admin
    topologySpreadConstraints: &topology
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
  repoServer:
    replicas: 2
    topologySpreadConstraints: *topology

  applicationSet:
    replicaCount: 2

  dex:
    enabled: true
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        namespace: monitoring
    topologySpreadConstraints: *topology
