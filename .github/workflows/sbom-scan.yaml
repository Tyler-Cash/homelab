name: "Image Security Scan"

on:
  push:
    branches:
      - "master"
  pull_request:

permissions:
  contents: read
  security-events: write

jobs:
  discover:
    name: "Discover Images"
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.discover.outputs.images }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Install Helm"
        uses: "azure/setup-helm@v4"
        with:
          version: "v3.13.3"

      - name: "Set up yq"
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: "Set up jq"
        run: sudo apt-get install -y jq

      - name: "Run discovery script"
        id: discover
        run: |
          set -v
          chmod +x ./scripts/discover-images.sh
          TMP_FILE=$(mktemp)
          echo "TMP_FILE_PATH=$TMP_FILE" >> $GITHUB_ENV
          images=$(./scripts/discover-images.sh "$TMP_FILE")
          echo "--- RAW SCRIPT OUTPUT ---"
          echo "$images"
          echo "--- END RAW SCRIPT OUTPUT ---"
          # Convert multi-line string to a JSON array for the matrix
          echo "images=$(echo "$images" | jq -R . | jq -s .)" >> $GITHUB_OUTPUT

      - name: "Upload debug artifact"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-rendered-yaml
          path: ${{ env.TMP_FILE_PATH }}

  scan:
    name: "Scan Images"
    needs: discover
    if: ${{ needs.discover.outputs.images != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.discover.outputs.images) }}

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Run Trivy vulnerability scanner"
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.image }}
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "HIGH,CRITICAL"
          exit-code: "1"

      - name: "Upload Trivy scan results to GitHub Security tab"
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

      - name: "Generate SBOM"
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.image }}
          format: "cyclonedx"
          output: "${{ matrix.image }}.cdx.json"

      - name: "Upload SBOM as artifact"
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ matrix.image }}
          path: "${{ matrix.image }}.cdx.json"
          retention-days: 7