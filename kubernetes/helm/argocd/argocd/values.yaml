argo-cd:
  server:
    ingress:
      enabled: true
      hosts:
        - &host argocd.k8s.tylercash.dev
      annotations:
        kubernetes.io/ingress-allow-http: "false"
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
        nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8"
        nginx.org/websocket-services: "argocd-server"
      tls:
        - hosts:
            - *host
          secretName: argocd-tylercash-dev-letsencrypt # do not change, this is provided by Argo CD
    configs:
      cm.url: *host
    # config:
    #   admin.enabled: "false"
    #   url: https://argocd.k8s.tylercash.dev
    #   exec.enabled: "true"
    #   resource.exclusions: |
    #     - apiGroups:
    #         - kyverno.io
    #       kinds:
    #         - AdmissionReport
    #         - BackgroundScanReport
    #         - ClusterAdmissionReport
    #         - ClusterBackgroundScanReport
    #       clusters:
    #         - '*'
    #   resource.compareoptions: |
    #     ignoreAggregatedRoles: true
    #   oidc.config: |
    #     name: Authentik
    #     issuer: "https://authentik.k8s.tylercash.dev/application/o/argocd/"
    #     clientID: $argocd-oidc-secrets:oidc.authentik.client_id
    #     clientSecret: $argocd-oidc-secrets:oidc.authentik.client_secret
    #     requestedScopes:
    #       - openid
    #       - profile
    #       - email
    #       - groups
    #     oidc.tls.insecure.skip.verify: true
    # rbacConfig:
    #   policy.csv: |
    #     g, argo-admin, role:admin

  # dex:
  #   enabled: true
  #   metrics:
  #     enabled: true
  #     serviceMonitor:
  #       enabled: true
  #       namespace: monitoring
