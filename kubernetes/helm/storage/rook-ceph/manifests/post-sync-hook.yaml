apiVersion: batch/v1
kind: CronJob
metadata:
  name: ceph-configurer
spec:
  schedule: "@hourly"
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
            - name: config-init
              image: rook/ceph:master
              command: ["/usr/local/bin/toolbox.sh"]
              args: ["--skip-watch"]
              imagePullPolicy: IfNotPresent
              env:
                - name: ROOK_CEPH_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: rook-ceph-mon
                      key: ceph-username
              volumeMounts:
                - mountPath: /etc/ceph
                  name: ceph-config
                - name: mon-endpoint-volume
                  mountPath: /etc/rook
                - name: ceph-admin-secret
                  mountPath: /var/lib/rook-ceph-mon
          containers:
            - name: script
              image: rook/ceph:master
              volumeMounts:
                - mountPath: /etc/ceph
                  name: ceph-config
                  readOnly: true
              command:
                - "bash"
                - "-c"
                - |
                  set -e

                  echo "Enable modules"
                  ceph mgr module enable rook
                  ceph orch set backend rook
                  ceph mgr module enable insights
                  ceph mgr module disable diskprediction_local
                  ceph dashboard set-grafana-api-url https://grafana.k8s.tylercash.dev

                  echo "Configure PG autoscaler"
                  ceph osd pool set ceph-filesystem-hdd-data0 pg_num 64
                  ceph config set global mon_target_pg_per_osd 100
                  ceph config set mon mon_max_pg_per_osd 500

                  echo "Configure disk prediction"
                  ceph config set global device_failure_prediction_mode local
                  #                  if ceph dashboard sso status | grep "disabled"; then
                  #                    echo "Configuring SAML"
                  #                    ceph dashboard sso setup saml2 https://ceph.k8s.tylercash.dev https://authentik.k8s.tylercash.dev/api/v3/providers/saml/3/metadata/?download http://schemas.goauthentik.io/2021/02/saml/username
                  #                    ceph dashboard sso enable saml2
                  #                    ceph mgr module disable dashboard
                  #                    ceph mgr module enable dashboard
                  #                    ceph dashboard sso status
                  #                  fi
                  if ! ceph dashboard ac-user-show tcash ; then # Not 100% foolproof comparison, but good enough for home
                    echo "Creating users"
                    cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-100} | head -n 1 > /tmp/pass
                    ceph dashboard ac-user-create tcash -i /tmp/pass administrator 2>&1 /dev/null
                    rm -f pass
                  fi
          volumes:
            - name: ceph-admin-secret
              secret:
                secretName: rook-ceph-mon
                optional: false
                items:
                  - key: ceph-secret
                    path: secret.keyring
            - name: mon-endpoint-volume
              configMap:
                name: rook-ceph-mon-endpoints
                items:
                  - key: data
                    path: mon-endpoints
            - name: ceph-config
              emptyDir:
                sizeLimit: 100Mi
          restartPolicy: Never
